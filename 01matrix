Given an m x n binary matrix mat, return the distance of the nearest 0 for each cell.

The distance between two adjacent cells is 1.

Example 1:


Input: mat = [[0,0,0],[0,1,0],[0,0,0]]
Output: [[0,0,0],[0,1,0],[0,0,0]]


class Solution {
public:
    vector<vector<int>> updateMatrix(vector<vector<int>>& mat) 
    {
        int szi = mat.size();
        int szj = mat[0].size();
        vector<vector<int>> vec(szi, vector<int> (szj));
        
        for(int i = 0; i < szi; i++)
        {
            for(int j = 0; j < szj; j++)
            {
                if(mat[i][j] != 0)
                {
                    vec[i][j] = INT_MAX - 10000;
                }
            }
        }
        for (int i = 0; i < szi; ++i) 
        {
            for (int j = 0; j < szj; ++j) 
            {
                if (mat[i][j] == 0) 
                {
                    vec[i][j] = 0;
                }
                else
                {
                    if (i > 0)
                    {
                        vec[i][j] = min(vec[i][j], vec[i - 1][j] + 1);
                    }
                    if (j > 0)
                    {
                        vec[i][j] = min(vec[i][j], vec[i][j - 1] + 1);
                    }
                }
            }
        }
        for (int i = szi - 1; i >= 0; --i) 
        {
            for (int j = szj - 1; j >= 0; --j) 
            {
                if (i < szi - 1)
                {
                    vec[i][j] = min(vec[i][j], vec[i + 1][j] + 1);
                }
                if (j < szj - 1)
                {
                    vec[i][j] = min(vec[i][j], vec[i][j + 1] + 1);
                }
            }
        }
        return vec;
    }
    
    /*int szi = mat.size();
    int szj = mat[0].size();
    
    vector<vector<int>> vec(szi, vector<int>(szj));
    for(int i = 0; i < szi; i++)
    {
        for(int j = 0; j < szj; j++)
        {
            if(mat[i][j] != 0)
            {
                vec[i][j] = 4;
            }
        }
    }
	for (int i = 0; i < szi; ++i)
	{
		for (int j = 0; j < szj; ++j)
		{
			if (mat[i][j] == 0)
			{
				vec[i][j] = 0;
			}
			else
			{
				for (int k = 0; k < szi; ++k)
				{
					for (int h = 0; h < szj; ++h)
					{
						if (mat[k][h] == 0)
						{
							vec[i][j] = min(vec[i][j], abs(k - i) + abs(h - j));
						}
					}
				}
			}
		}
	}
	return vec;   
    }*/
};
